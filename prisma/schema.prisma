generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id             String           @id @default(uuid())
  role           AccountRole    
  username       String           @unique
  authentication Authentication?

  @@map("accounts")
}

model Authentication {
  accountId    String   @id @map("account_id")
  passwordHash String   @map("password_hash")
  salt         String
  algorithm    String   @default("bcrypt")
  updatedAt    DateTime @default(now()) @map("updated_at")
  account      Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
  
  @@map("authentications")
}

model VehicleEntry {
  id          String         @id @default(uuid())
  plate       String
  category    VehicleCategory
  operator    String
  entryTime   DateTime       @default(now()) @map("entry_time")
  exitTime    DateTime?      @map("exit_time")
  status      VehicleStatus  @default(INSIDE)
  deletedAt   DateTime?      @map("deleted_at")
  description String?        @default("")     // nova coluna

  @@map("vehicle_entries")
  @@index([plate])
}

model PatioConfig {
  id               String @id @default("singleton")
  maxCars          Int
  maxMotorcycles   Int
  maxLargeVehicles Int

  @@map("patio_configs")
}

enum AccountRole {
  ADMIN
  NORMAL
}

enum VehicleCategory {
  carro
  moto
  carroGrande
}

enum VehicleStatus {
  INSIDE     // veículo está no pátio
  EXITED     // veículo saiu do pátio
  DELETED    // registro foi "apagado" mas pode ser restaurado
}