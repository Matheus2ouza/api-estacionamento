generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id             String           @id @default(uuid())
  role           AccountRole    
  username       String           @unique
  authentication Authentication?
  
  // ✅ Relação reversa com VehicleEntry
  vehicleEntries VehicleEntry[]   @relation("OperatorEntries")

  @@map("accounts")
}

model Authentication {
  accountId    String   @id @map("account_id")
  passwordHash String   @map("password_hash")
  salt         String
  algorithm    String   @default("bcrypt")
  updatedAt    DateTime @default(now()) @map("updated_at")
  account      Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
  
  @@map("authentications")
}

model VehicleEntry {
  id          String   @id @default(uuid())
  plate       String   @unique
  category    VehicleCategory
  operatorId  String   @map("operator_id")
  entryTime   DateTime @default(now()) @map("entry_time")

  operator    Account  @relation("OperatorEntries", fields: [operatorId], references: [id], onDelete: NoAction)

  @@map("vehicle_entries")
}

model VehicleHistory {
  id         String   @id @default(uuid())
  plate      String
  exitTime   DateTime @default(now()) @map("exit_time")
  
  @@map("vehicle_histories")
}

model PatioConfig {
  id               String @id @default("singleton")
  maxCars          Int
  maxMotorcycles   Int
  maxLargeVehicles Int

  @@map("patio_configs")
}

enum AccountRole {
  ADMIN
  NORMAL
}

enum VehicleCategory {
  carro
  moto
  carroGrande
}
